/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void textfieldInputAnswer_change1(GTextField source, GEvent event) { //_CODE_:textfieldInputAnswer:382653:
  println("textfieldInputAnswer - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfieldInputAnswer:382653:

public void buttonSubmit_click1(GButton source, GEvent event) { //_CODE_:buttonSubmit:738354:
  println("buttonSubmit - GButton >> GEvent." + event + " @ " + millis());
  checkAnswer(textfieldInputAnswer);
} //_CODE_:buttonSubmit:738354:

public void codePanel_Click(GPanel source, GEvent event) { //_CODE_:codePanel:694690:
  println("panel1 - GPanel >> GEvent." + event + " @ " + millis());
} //_CODE_:codePanel:694690:

public void codeInput_change(GTextField source, GEvent event) { //_CODE_:codeInput:740351:
  println("codeInput - GTextField >> GEvent." + event + " @ " + millis());
  checkCode(codeInput);
} //_CODE_:codeInput:740351:

public void timer1_Action(GTimer source) { //_CODE_:timer1:908266:
  println("timer1 - GTimer >> an event occured @ " + millis());
  timer1.stop();
  codePanel.setVisible(false);
  codeInput.setText("");
} //_CODE_:timer1:908266:

public void timer2_Action1(GTimer source) { //_CODE_:timer2:723021:
  println("timer2 - GTimer >> an event occured @ " + millis());
  timer2.stop();
  labelClue.setVisible(false);
  labelClue.setText("");
} //_CODE_:timer2:723021:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  labelQuestion = new GLabel(this, 120, 50, 180, 40);
  labelQuestion.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  labelQuestion.setText("{Question}");
  labelQuestion.setOpaque(false);
  textfieldInputAnswer = new GTextField(this, 130, 110, 160, 60, G4P.SCROLLBARS_NONE);
  textfieldInputAnswer.setPromptText("Type in your answer here");
  textfieldInputAnswer.setOpaque(true);
  textfieldInputAnswer.addEventHandler(this, "textfieldInputAnswer_change1");
  buttonSubmit = new GButton(this, 160, 190, 80, 30);
  buttonSubmit.setText("Submit");
  buttonSubmit.addEventHandler(this, "buttonSubmit_click1");
  labelClue = new GLabel(this, 120, 250, 170, 40);
  labelClue.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  labelClue.setText("{Clue}");
  labelClue.setOpaque(false);
  codePanel = new GPanel(this, 312, 2, 165, 70, "Code");
  codePanel.setText("Code");
  codePanel.setOpaque(true);
  codePanel.addEventHandler(this, "codePanel_Click");
  codeInput = new GTextField(this, 0, 20, 165, 40, G4P.SCROLLBARS_NONE);
  codeInput.setPromptText("Input Code Here");
  codeInput.setOpaque(true);
  codeInput.addEventHandler(this, "codeInput_change");
  codePanel.addControl(codeInput);
  timer1 = new GTimer(this, this, "timer1_Action", 2000);
  timer2 = new GTimer(this, this, "timer2_Action1", 2000);
}

// Variable declarations 
// autogenerated do not edit
GLabel labelQuestion; 
GTextField textfieldInputAnswer; 
GButton buttonSubmit; 
GLabel labelClue; 
GPanel codePanel; 
GTextField codeInput; 
GTimer timer1; 
GTimer timer2; 
